import {
  createBaseVNode,
  createCommentVNode,
  createElementBlock,
  createVNode,
  nextTick,
  onMounted,
  onUnmounted,
  openBlock,
  popScopeId,
  pushScopeId,
  ref,
  renderSlot,
  toDisplayString,
  toRefs,
  watch
} from "./chunk-7VWGN5MA.js";
import "./chunk-RFO2XWEP.js";

// ../../node_modules/.pnpm/v3-infinite-loading@1.2.1/node_modules/v3-infinite-loading/lib/v3-infinite-loading.mjs
var E = (e, t) => {
  const n = e.__vccOpts || e;
  for (const [o, r] of t)
    n[o] = r;
  return n;
};
var M = {};
var T = (e) => (pushScopeId("data-v-39432f99"), e = e(), popScopeId(), e);
var V = { class: "container" };
var W = T(() => createBaseVNode("div", { class: "spinner" }, null, -1));
var j = [
  W
];
function D(e, t) {
  return openBlock(), createElementBlock("div", V, j);
}
var U = E(M, [["render", D], ["__scopeId", "data-v-39432f99"]]);
var z = (e) => ({
  loading() {
    e.value = "loading";
  },
  loaded() {
    e.value = "loaded";
  },
  complete() {
    e.value = "complete";
  },
  error() {
    e.value = "error";
  }
});
var A = (e, t) => () => {
  t.loading(), e("infinite", t);
};
var F = (e, t) => {
  const n = e.getBoundingClientRect();
  if (!t)
    return n.top >= 0 && n.bottom <= window.innerHeight;
  const o = t.getBoundingClientRect();
  return n.top >= o.top && n.bottom <= o.bottom;
};
var f;
var h = (e) => {
  e.parentEl = document.querySelector(e.target) || null;
  let t = `0px 0px ${e.distance}px 0px`;
  e.top && (t = `${e.distance}px 0px 0px 0px`), f = new IntersectionObserver((n) => {
    n[0].isIntersecting && (e.firstload && e.emit(), e.firstload = true);
  }, { root: e.parentEl, rootMargin: t }), f.observe(e.infiniteLoading.value);
};
var p = () => {
  f.disconnect();
};
var G = { class: "state-error" };
var J = {
  __name: "InfiniteLoading",
  props: {
    top: { type: Boolean, required: false },
    target: { type: [String, Boolean], required: false },
    distance: { type: Number, required: false, default: 0 },
    identifier: { required: false },
    firstload: { type: Boolean, required: false, default: true },
    slots: { type: Object, required: false }
  },
  emits: ["infinite"],
  setup(e, { emit: t }) {
    const n = e, o = ref(null), r = ref("ready"), { top: _, firstload: I, target: k, distance: S } = n, { identifier: v } = toRefs(n), i = {
      infiniteLoading: o,
      target: k,
      top: _,
      firstload: I,
      distance: S,
      emit: A(t, z(r)),
      parentEl: null
    }, q = () => watch(r, async (s) => {
      const c = i.parentEl || document.documentElement, l = c.scrollHeight;
      await nextTick(), s == "loaded" && _ && (c.scrollTop = c.scrollHeight - l), s == "loaded" && F(o.value, i.parentEl) && i.emit(), s == "complete" && p();
    }), B = () => watch(v, () => {
      r.value = "ready", p(), h(i);
    });
    return onMounted(() => {
      h(i), q(), v && B();
    }), onUnmounted(() => {
      p();
    }), (s, c) => (openBlock(), createElementBlock("div", {
      ref_key: "infiniteLoading",
      ref: o
    }, [
      r.value == "loading" ? renderSlot(s.$slots, "spinner", { key: 0 }, () => [
        createVNode(U)
      ], true) : createCommentVNode("v-if", true),
      r.value == "complete" ? renderSlot(s.$slots, "complete", { key: 1 }, () => {
        var l;
        return [
          createBaseVNode("span", null, toDisplayString(((l = e.slots) == null ? void 0 : l.complete) || "No more results!"), 1)
        ];
      }, true) : createCommentVNode("v-if", true),
      r.value == "error" ? renderSlot(s.$slots, "error", {
        key: 2,
        retry: i.emit
      }, () => {
        var l;
        return [
          createBaseVNode("span", G, [
            createBaseVNode("span", null, toDisplayString(((l = e.slots) == null ? void 0 : l.error) || "Oops something went wrong!"), 1),
            createBaseVNode("button", {
              class: "retry",
              onClick: c[0] || (c[0] = (...$) => i.emit && i.emit(...$))
            }, "retry")
          ])
        ];
      }, true) : createCommentVNode("v-if", true)
    ], 512));
  }
};
var P = E(J, [["__scopeId", "data-v-231b1688"]]);

// dep:v3-infinite-loading
var v3_infinite_loading_default = P;
export {
  v3_infinite_loading_default as default
};
//# sourceMappingURL=v3-infinite-loading.js.map
