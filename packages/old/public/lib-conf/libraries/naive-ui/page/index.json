{
  "version": "1.0",
  "componentLibName": "naive-ui",
  "fileDir": [
    { "type": "dir", "name": "/public" },
    { "type": "dir", "name": "/src" },
    { "type": "dir", "name": "/src/api" },
    {
      "type": "file",
      "name": "/src/api/index.js",
      "contents": "// api\n        import { request } from '@platform/main'\n        // 新建接口\n        export function create(params) {\n            return request({\n                url: '',\n                method: 'post',\n                data: params\n            })\n        }\n        // 删除接口\n        export function del(id) {\n            return request({\n                url: '',\n                method: 'delete',\n            })\n        }\n        // 编辑接口\n        export function edit(params) {\n            return request({\n                url: '',\n                method: 'put',\n                data: params\n            })\n        }\n        // 查询接口\n        export function query(data) {\n            return request({\n                url: '',\n                method: 'get',\n            })\n        }\n        "
    },
    {
      "type": "file",
      "name": "/src/store.js",
      "contents": "import { ref, nextTick } from 'vue'\n        import { query, create, edit, del } from './api/index.js'\n        export const formRef = ref(null)\n        export const pageRef = ref(null)\n        export const tableRef = ref(null)\n        export const visible = ref(false)\n        export const action = ref('create')\n        export const vbind = {\n            request: {\n                XHR: query, // promise 请求函数\n                pageMethod: (current, size) => ({\n                    page: {\n                    current,\n                    size,\n                    },\n                })\n            },\n            response: {\n                dataMethod: (res) => res,\n                pageMethod: () => {}\n            }\n        }\n        \n        export const handleShow = (row) => {\n            action.value = row ? 'edit' : 'create'\n            visible.value = true\n            nextTick().then(() => {\n              formRef.value.setValue(row || {})\n            })\n        }\n        \n        export const handleSave = () => {\n          \n            (action.value === 'create' ? create : edit)({\n                dictId: '1458608540775092226',\n                isTrusted: true,\n                ...formRef.value.getValue()\n            }).then(res => {\n                visible.value = false\n                tableRef.value.commitQuery();\n            })\n        }\n        \n        export const handleCancel = () => {\n            visible.value = false\n        }\n        \n        export const handleDel = (id) => {\n            del(id).then(() => {\n                tableRef.value.commitQuery();\n            });\n        }"
    },
    {
      "type": "file",
      "name": "/src/Page.vue",
      "contents": "<template>\n        <n-layout class=\"nw-page\" ref=\"pageRef\">\n          <n-layout-header>\n            <h1>标题</h1>\n            <div class=\"nw-page-header-right\">\n              <NwTableFun :table=\"tableRef\"></NwTableFun>\n            </div>\n          </n-layout-header>\n          <n-layout-content>\n            <NwTable ref=\"tableRef\" :columns=\"columns\" v-bind=\"vbind\">\n              <template v-slot:header-left=\"{ selected }\">\n                <n-button type=\"info\" size=\"small\" style=\"margin-right: 5px\" @click=\"handleShow()\"\n                  >添加</n-button\n                >\n              </template>\n              <template #header-right>\n              </template>\n              <template v-slot:search-form=\"{ searchFormData, searchFormData2 }\">\n                <n-form :model=\"searchFormData\"> </n-form>\n              </template>\n            </NwTable>\n          </n-layout-content>\n        </n-layout>\n        <n-drawer\n          v-model:show=\"visible\"\n          :to=\"pageRef && pageRef.$el\"\n          width=\"600px\"\n          :height=\"200\"\n          placement=\"right\"\n        >\n          <n-drawer-content\n            :title=\"action === 'create' ? '新建' : '编辑'\"\n            :header-style=\"{\n              padding: '10px',\n              'font-size': '16px',\n              'font-weight': 'bold',\n            }\"\n            :footer-style=\"{\n              padding: '10px',\n            }\"\n          >\n            <nw-form-view\n              ref=\"formRef\"\n              src=\"/html/model/vue-runtime.html?formId=\"\n            />\n            <template #footer>\n              <n-button type=\"info\" size=\"small\" style=\"margin-right: 5px\" @click=\"handleSave\"\n                >保存</n-button\n              >\n              <n-button size=\"small\" @click=\"handleCancel\">取消</n-button>\n            </template>\n          </n-drawer-content>\n        </n-drawer>\n      </template>\n      \n      <script lang=\"jsx\">\n      import { defineComponent, reactive, ref, h } from \"vue\";\n      import nt from \"/@/components/nw-table/index.js\";\n      import {\n        NDrawer,\n        NDrawerContent,\n        NLayout,\n        NLayoutHeader,\n        NLayoutContent,\n        NLayoutFooter,\n        NThemeEditor,\n        NButton,\n        NInputGroup,\n        NInput,\n        NForm,\n        NFormItem,\n        NPopconfirm,\n        useMessage,\n      } from \"naive-ui\";\n      import NwFormView from \"/@/components/nw-form-view/index.vue\";\n      import {\n        action,\n        vbind,\n        visible,\n        formRef,\n        pageRef,\n        tableRef,\n        handleShow,\n        handleSave,\n        handleCancel,\n        handleDel,\n      } from \"./store.js\";\n      \n      export default defineComponent({\n        components: {\n          NwTable: nt.NwTable,\n          NwTableFun: nt.NwTableFun,\n          NDrawer,\n          NDrawerContent,\n          NLayout,\n          NLayoutHeader,\n          NLayoutContent,\n          NLayoutFooter,\n          NThemeEditor,\n          NButton,\n          NInputGroup,\n          NInput,\n          NForm,\n          NFormItem,\n          NPopconfirm,\n          NwFormView,\n        },\n        setup() {\n          const columns = reactive([\n            { type: \"checkbox\", width: 35 },\n            {\n              field: \"column1\",\n              title: \"列1\",\n            },\n            {\n              field: \"\",\n              title: \"操作\",\n              showHeaderOverflow: true,\n              slots: {\n                default: ({ row }) => {\n                  return [\n                    <div>\n                      <a\n                        style=\"color:#2d8cf0;cursor: pointer;display:inline-block\"\n                        onClick={() => {\n                          handleShow(row);\n                        }}\n                      >\n                        {\"编辑\"}\n                      </a>\n                      <NPopconfirm\n                        onPositive-click={(e) => {\n                          handleDel(row.id);\n                        }}\n                        positive-text=\"确定\"\n                        negative-text=\"取消\"\n                      >\n                        {{\n                          trigger: () => (\n                            <a style=\"color:red;cursor: pointer;display:inline-block;margin-left:15px\">\n                              {\"删除\"}\n                            </a>\n                          ),\n                          default: () => \"是否删除当前项?\",\n                        }}\n                      </NPopconfirm>\n                    </div>,\n                  ];\n                },\n              },\n            },\n          ]);\n          return {\n              action,\n            vbind,\n            visible,\n            formRef,\n            pageRef,\n            tableRef,\n            columns,\n            handleShow,\n            handleSave,\n            handleCancel\n          };\n        },\n      });\n      </script>\n      "
    },
    {
      "type": "file",
      "name": "/src/App.vue",
      "contents": "<script setup>\n        import { NMessageProvider } from 'naive-ui'\n        import Page from './Page.vue'\n        </script>\n        <template>\n            <n-message-provider>\n                <Page />\n            </n-message-provider>\n        </template>\n        <style>\n        </style>\n        "
    },
    {
      "type": "file",
      "name": "/src/main.js",
      "contents": "import { createApp } from 'vue'\n        import App from './App.vue'\n        createApp(App).mount('#app')\n        "
    },
    {
      "type": "file",
      "name": "/index.html",
      "contents": "<!DOCTYPE html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"UTF-8\" />\n            <link rel=\"icon\" href=\"/favicon.ico\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n            <title>Vite App</title>\n          </head>\n          <body>\n            <div id=\"app\"></div>\n            <script type=\"module\" src=\"/src/main.js\"></script>\n          </body>\n        </html>\n        "
    },
    {
      "type": "file",
      "name": "/.gitignore",
      "contents": "node_modules\n        .DS_Store\n        dist\n        dist-ssr\n        *.local"
    },
    {
      "type": "file",
      "name": "/package.json",
      "contents": "{\n          \"name\": \"basic-project\",\n          \"version\": \"0.0.0\",\n          \"scripts\": {\n            \"dev\": \"vite\",\n            \"build\": \"vite build\",\n            \"serve\": \"vite preview\"\n          },\n          \"dependencies\": {\n            \"vue\": \"^3.2.16\"\n          },\n          \"devDependencies\": {\n            \"@vitejs/plugin-vue\": \"^1.9.3\",\n            \"vite\": \"^2.6.4\",\n            \"naive-ui\": \"^2.16.2\"\n          }\n        }"
    },
    {
      "type": "file",
      "name": "/vite.config.js",
      "contents": "import { defineConfig } from 'vite'\n        import vue from '@vitejs/plugin-vue'\n        export default defineConfig({\n          plugins: [vue()]\n        })"
    }
  ]
}
